{"version":3,"file":"ngx-role-accessor.mjs","sources":["../../../projects/ngx-role-accessor/src/lib/services/role.service.ts","../../../projects/ngx-role-accessor/src/lib/directives/has-role.directive.ts","../../../projects/ngx-role-accessor/src/lib/directives/has-any-role.directive.ts","../../../projects/ngx-role-accessor/src/lib/directives/has-permission.directive.ts","../../../projects/ngx-role-accessor/src/public-api.ts","../../../projects/ngx-role-accessor/src/ngx-role-accessor.ts"],"sourcesContent":["import { Injectable, inject, computed, signal } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleService {\r\n  private roles$ = new BehaviorSubject<string[]>([]);\r\n  private permissions$ = new BehaviorSubject<string[]>([]);\r\n  private tenant$ = new BehaviorSubject<string | null>(null);\r\n\r\n  setRoles(roles: string[]): void {\r\n    this.roles$.next(roles);\r\n  }\r\n\r\n  setPermissions(permissions: string[]): void {\r\n    this.permissions$.next(permissions);\r\n  }\r\n\r\n  setTenant(tenantId: string): void {\r\n    this.tenant$.next(tenantId);\r\n  }\r\n\r\n  hasRole(role: string): Observable<boolean> {\r\n    return this.roles$.pipe(map(roles => roles.includes(role)));\r\n  }\r\n\r\n  hasAnyRole(rolesToCheck: string[]): Observable<boolean> {\r\n    return this.roles$.pipe(\r\n      map(userRoles => rolesToCheck.some(role => userRoles.includes(role)))\r\n    );\r\n  }\r\n\r\n  hasPermission(permission: string): Observable<boolean> {\r\n    return this.permissions$.pipe(map(perms => perms.includes(permission)));\r\n  }\r\n\r\n  getTenant(): Observable<string | null> {\r\n    return this.tenant$.asObservable();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  inject\r\n} from '@angular/core';\r\nimport { RoleService } from '../services/role.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({ selector: '[hasRole]', standalone: true })\r\nexport class HasRoleDirective implements OnInit, OnDestroy {\r\n  @Input('hasRole') role!: string;\r\n  private roleService = inject(RoleService);\r\n  private tpl = inject(TemplateRef);\r\n  private vcr = inject(ViewContainerRef);\r\n  private sub!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.roleService.hasRole(this.role).subscribe(has => {\r\n      this.vcr.clear();\r\n      if (has) this.vcr.createEmbeddedView(this.tpl);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub?.unsubscribe();\r\n  }\r\n}","import {\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  inject\r\n} from '@angular/core';\r\nimport { RoleService } from '../services/role.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({ selector: '[hasAnyRole]', standalone: true })\r\nexport class HasAnyRoleDirective implements OnInit, OnDestroy {\r\n  @Input('hasAnyRole') roles!: string[];\r\n  private roleService = inject(RoleService);\r\n  private tpl = inject(TemplateRef);\r\n  private vcr = inject(ViewContainerRef);\r\n  private sub!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.roleService.hasAnyRole(this.roles).subscribe(has => {\r\n      this.vcr.clear();\r\n      if (has) this.vcr.createEmbeddedView(this.tpl);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub?.unsubscribe();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  inject\r\n} from '@angular/core';\r\nimport { RoleService } from '../services/role.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({ selector: '[hasPermission]', standalone: true })\r\nexport class HasPermissionDirective implements OnInit, OnDestroy {\r\n  @Input('hasPermission') permission!: string;\r\n  private roleService = inject(RoleService);\r\n  private tpl = inject(TemplateRef);\r\n  private vcr = inject(ViewContainerRef);\r\n  private sub!: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.sub = this.roleService.hasPermission(this.permission).subscribe(has => {\r\n      this.vcr.clear();\r\n      if (has) this.vcr.createEmbeddedView(this.tpl);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub?.unsubscribe();\r\n  }\r\n}","/*\r\n * Public API Surface of ngx-role-accessor\r\n */\r\n\r\nexport * from './lib/services/role.service';\r\nexport * from './lib/directives/has-role.directive';\r\nexport * from './lib/directives/has-any-role.directive';\r\nexport * from './lib/directives/has-permission.directive';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}